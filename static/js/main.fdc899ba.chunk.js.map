{"version":3,"sources":["pages/LoginPage.jsx","components/Dialog.js","components/Post.jsx","components/TabularListing.js","pages/Home.jsx","components/editor/QuillEditor.js","components/EditPostForm.js","pages/EditPost.js","pages/NewPost.jsx","components/Nav.js","Routes.js","reportWebVitals.js","index.js"],"names":["LoginForm","setUserAuth","useForm","register","handleSubmit","errors","useState","loginErr","setLoginErr","onSubmit","data","a","formData","JSON","stringify","fetch","process","method","body","headers","Accept","req","json","myJson","status","localStorage","setItem","user","username","display_name","token","Form","className","Group","Label","htmlFor","Control","autoComplete","name","type","placeholder","ref","required","Text","message","password","Button","onClick","BACKEND_URL","AlertDialog","state","open","handleClickOpen","setState","handleClose","handleAgree","getItem","bearer","props","deleteid","Authorization","then","history","push","window","location","reload","catch","err","console","log","error","handleDisagree","this","style","display","justifyContent","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","color","autoFocus","React","Component","withRouter","require","DateTime","options","year","month","day","hour","minute","second","TabularListing","items","config","sortConfig","setSortConfig","useMemo","sortableItems","sort","b","key","direction","requestSort","useSortableData","posts","getClassNamesFor","title","undefined","map","item","published","author_name","fromISO","date_created","toLocaleString","date_modified","target","href","_id","Home","setPosts","useEffect","axios","get","response","getPosts","__ISMSIE__","navigator","userAgent","match","FILE_UPLOAD_LOCATION","Clipboard","getMetaTagElements","stringContent","el","document","createElement","innerHTML","getElementsByTagName","e","clipboardData","getData","pastedData","urlMatches","length","preventDefault","forEach","link","payload","image","url","node","getAttribute","rendered","range","quill","getSelection","position","index","pasteHTML","setSelection","Quill","import","BlockEmbed","ImageBlot","value","imgTag","setAttribute","src","alt","blotName","tagName","VideoBlot","videoTag","iframeTag","FileBlot","prefixTag","innerText","bTag","linkTag","FILE_UPLOAD_LOCATION_GET","appendChild","querySelector","PollBlot","QuillEditor","handleChange","html","editorHtml","onEditorChange","imageHandler","inputOpenImageRef","current","click","videoHandler","inputOpenVideoRef","fileHandler","inputOpenFileRef","insertImage","stopPropagation","currentTarget","files","file","FormData","append","post","header","success","alert","reactQuillRef","getEditor","focus","insertEmbed","fileName","_isMounted","onFilesChange","insertVideo","insertFile","modules","syntax","toolbar","container","handlers","insertPoll","pollHandler","formats","createRef","fetchid","text","defaultValue","onChange","persist","theme","initialiser","accept","EditPostForm","preloadedValues","setText","posttitle","setTitle","coverImage","setCoverImage","setPublished","useParams","defaultValues","useHistory","fontSize","checked","textAlign","margin","event","sendDataToServer","currentDisplayName","realFormData","cover_image_url","res","imageFormData","EditPost","setData","size","htmltype","theNav","userAuth","Navbar","Brand","Nav","to","Link","variant","clear","Routes","Container","Row","Col","exact","path","LoginPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fdc899ba.chunk.js","sourcesContent":["import { React, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nconst LoginForm = ({ setUserAuth }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [loginErr, setLoginErr] = useState(false);\n\n  const onSubmit = async (data) => {\n    const formData = JSON.stringify(data);\n\n    try {\n      const req = await fetch(\n        process.env.REACT_APP_BACKEND_URL+\"login\",        \n        {\n          method: \"POST\",\n          body: formData,\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const myJson = await req.json();\n      if (req.status !== 200) {\n        setLoginErr(true);\n        return;\n      }\n\n      localStorage.setItem(\"currentUsername\", myJson.user.username);\n      localStorage.setItem(\"currentDisplayName\", myJson.user.display_name);\n      localStorage.setItem(\"token\", myJson.token);\n      localStorage.setItem(\"userAuth\", true);\n\n      setUserAuth(true);\n    } catch (err) {\n      setLoginErr(true);\n    }\n  };\n\n  return (\n    <Form className=\"layout\">\n      <h3>Login</h3>\n      <Form.Group>\n        <Form.Label htmlFor=\"author_name\">User:</Form.Label>\n        <Form.Control\n          autoComplete=\"username\"\n          name=\"username\"\n          type=\"text\"\n          placeholder=\"Name\"\n          ref={register({ required: \"required field\" })}\n        ></Form.Control>\n        {errors.username && <Form.Text>{errors.username.message}</Form.Text>}\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label htmlFor=\"password\" placeholder=\"password\">\n          Password:\n        </Form.Label>\n        <Form.Control\n          autoComplete=\"current-password\"\n          name=\"password\"\n          type=\"password\"\n          ref={register({ required: \"required field\" })}\n        ></Form.Control>\n\n        {errors.password && <Form.Text>{errors.password.message} </Form.Text>}\n      </Form.Group>\n\n      {loginErr && <Form.Text>Username or password incorrect</Form.Text>}\n      <Button\n        type=\"submit\"\n        onClick={((e) => e.preventDefault(), handleSubmit(onSubmit))}\n      >\n        Login\n      </Button>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport {withRouter} from 'react-router-dom';\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\n\nclass AlertDialog extends React.Component {\n  deleteid;  \n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleAgree = () => {    \n    const token = localStorage.getItem(\"token\");\n    const bearer = `Bearer ${token}`;\n\n    try {\n      const req = fetch(\n\n        BACKEND_URL + \n        `posts/${this.props.deleteid}`,\n\n        {\n          method: \"delete\",\n          headers: {\n            Authorization: bearer,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      ).then(()=>{\n        \n        this.props.history.push(\"/posts\");\n        window.location.reload(); //For when I am on my own page\n      \n      }).catch((err) => {\n        console.log(err);\n\n      });\n\n    } catch (err) {\n      console.error(err);\n    }\n    \n    this.handleClose();\n\n  };\n\n  handleDisagree = () => {\n    this.handleClose();\n  };\n\n  render() {\n    return (\n      <div deleteid={this.props.deleteid} style={{\n        display: \"flex\",\n        justifyContent: \"center\"\n      }}>\n\n        <Button onClick={this.handleClickOpen}>Delete</Button>\n\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Successful Alert\"}\n          </DialogTitle>\n\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Do you really want to delete this post?\n            </DialogContentText>\n          </DialogContent>\n\n          <DialogActions>\n            <Button onClick={this.handleDisagree} color=\"primary\">\n              No\n            </Button>\n            <Button onClick={this.handleAgree} color=\"primary\" autoFocus>\n              Yes\n            </Button>\n          </DialogActions>\n\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AlertDialog);\n","import React from \"react\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport AlertDialog from \"./Dialog\";\nconst { DateTime } = require(\"luxon\");\n\nconst PUBLIC_URL = process.env.REACT_APP_PUBLIC_URL;\n\nconst Post = ({ post }) => {\n  let match = useRouteMatch();\n  return (\n    <Card\n      style={{\n        width: \"18rem\",\n        padding: \"30px\",\n        borderRadius: \"20px\",\n        maxHeight: \"410px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        justifyContent: \"center\"\n        \n      }}\n    >\n      <Card.Title>{post.title}</Card.Title>\n      <p><i>Written by {post.author_name}</i></p>\n\n      <p>Created on {DateTime.fromISO(post.date_created).toLocaleString(DateTime.DATE_MED)}</p>\n      <p>Edited on {DateTime.fromISO(post.date_modified).toLocaleString(DateTime.DATE_MED)}</p>\n      \n      <div className=\"choicebuttons\">\n        <Button variant=\"link\">\n          <a target=\"_blank\" href={`${PUBLIC_URL}posts/${post._id}`}>View Live</a>\n        </Button>\n        <Button variant=\"link\">\n          <Link to={`${match.url}/${post._id}`}>Edit Post</Link>\n        </Button>\n        <AlertDialog deleteid={post._id}></AlertDialog>\n      </div>\n      \n      \n      <Card.Body>{post.text} </Card.Body>\n    </Card>\n  );\n};\n\nexport default Post;\n","//List of references\n\n//Creating a sortable table:\n//https://www.smashingmagazine.com/2020/03/sortable-tables-react/\n\n//Unicode symbols for styling\n//https://unicode-table.com/en/25BC/\n\n//Locale date string \n//https://medium.com/swlh/use-tolocaledatestring-to-format-javascript-dates-2959108ea020\n\nimport React from 'react';\nimport '../styles/tabularlisting.css';\nimport AlertDialog from \"./Dialog\";\nimport Button from \"@material-ui/core/Button\";\n\nconst { DateTime } = require(\"luxon\");\nconst options = {year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit' }\n\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = React.useState(config);\n\n  const sortedItems = React.useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = 'ascending';\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === 'ascending'\n    ) {\n      direction = 'descending';\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nconst TabularListing = ({ posts }) => {\n  const { items, requestSort, sortConfig } = useSortableData(posts);\n  const getClassNamesFor = (title) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === title ? sortConfig.direction : undefined;\n  };\n  return (\n    <>\n    <h4>Post Listing</h4>\n    <table>\n      \n      <thead>\n\n        <tr>\n\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('title')}\n              className={getClassNamesFor('title')}\n            >\n              Title\n            </button>\n          </th>\n\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('author_name')}\n              className={getClassNamesFor('author_name')}\n            >\n              Author\n            </button>\n          </th>\n\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('date_created')}\n              className={getClassNamesFor('date_created')}\n            >\n              Date Created\n            </button>\n          </th>\n\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('date_modified')}\n              className={getClassNamesFor('date_modified')}\n            >\n              Date Modified\n            </button>\n          </th>\n\n          <th>\n            <button\n              type=\"button\"\n              onClick={() => requestSort('published')}\n              className={getClassNamesFor('published') + \" reversed\"}\n            >\n              Draft\n            </button>\n          </th>\n\n          <th>\n\n          </th>\n          <th>\n\n          </th>\n          <th>\n\n          </th>\n\n        </tr>\n      </thead>\n\n\n      <tbody>\n        {items.map((item) => (\n          <tr className={item.published ? \"notDraft\" : \"isDraft\"} key={item._id}>\n            <td>{item.title}{item.published ? \"\" : \" (Draft)\"}</td>\n            <td>{item.author_name}</td>\n            <td>{DateTime.fromISO(item.date_created).toLocaleString(options)}</td>\n            <td>{DateTime.fromISO(item.date_modified).toLocaleString(options)}</td>\n            <td>{item.published ? \"No\" : \"Yes\"}</td>\n            <td>{item.published ? <Button><a target=\"_blank\" href={`${process.env.REACT_APP_PUBLIC_URL}#/posts/${item._id}`}>View Live</a></Button> : \"\"}</td>\n            <td><Button><a href={process.env.REACT_APP_MY_URL+`#/posts/${item._id}`}>Edit</a></Button></td>\n            <td><AlertDialog deleteid={item._id}></AlertDialog></td>\n          </tr>\n        ))}\n      </tbody>\n\n    </table>\n    </>\n  );\n};\n\nexport default TabularListing;","import React, { useEffect, useState } from \"react\";\nimport Post from \"../components/Post\";\nimport TabularListing from \"../components/TabularListing\";\nimport axios from \"axios\";\n\nconst Home = () => {\n\n  const [posts, setPosts] = useState();\n\n  //Retrieves the fullset of posts, including drafts, if authenticated.\n  useEffect(() => {\n\n    const token = localStorage.getItem(\"token\");\n    const bearer = `Bearer ${token}`;\n\n    const getPosts = async () => {\n\n      try {\n        axios.get(process.env.REACT_APP_BACKEND_URL + \"allposts\", {\n          headers:{\n            Authorization: bearer,\n          }\n        }).then((response) => {\n          setPosts(response.data.posts);\n\n        }).catch((err) => {\n          console.log(err);\n        });\n\n      } catch (err) {}\n    };\n\n    getPosts();\n\n  }, []);\n  \n  return (\n\n    posts ? <TabularListing posts={posts} /> : <div>Loading...</div>\n\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport \"react-quill/dist/quill.snow.css\";\nimport axios from 'axios';\nconst __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\n\nconst FILE_UPLOAD_LOCATION = process.env.REACT_APP_BACKEND_URL + 'uploadfiles';\nconst FILE_UPLOAD_LOCATION_GET = process.env.REACT_APP_BACKEND_URL + 'uploads';\n\nconst QuillClipboard = Quill.import('modules/clipboard');\n\nclass Clipboard extends QuillClipboard {\n\n  getMetaTagElements = (stringContent) => {\n    const el = document.createElement('div');\n    el.innerHTML = stringContent;\n    return el.getElementsByTagName('meta');\n  };\n\n  async onPaste(e) {\n    let clipboardData = e.clipboardData || window.clipboardData;\n    let pastedData = await clipboardData.getData('Text');\n\n    const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n    if (urlMatches.length > 0) {\n      e.preventDefault();\n      urlMatches.forEach(link => {\n        axios.get(link)\n          .then(payload => {\n            // let title, image, url, description;\n            let title, image, url;\n            for (let node of this.getMetaTagElements(payload)) {\n              if (node.getAttribute(\"property\") === \"og:title\") {\n                title = node.getAttribute(\"content\");\n              }\n              if (node.getAttribute(\"property\") === \"og:image\") {\n                image = node.getAttribute(\"content\");\n              }\n              if (node.getAttribute(\"property\") === \"og:url\") {\n                url = node.getAttribute(\"content\");\n              }\n              // if (node.getAttribute(\"property\") === \"og:description\") {\n              //     description = node.getAttribute(\"content\");\n              // }\n            }\n\n            const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\n\n            let range = this.quill.getSelection();\n            let position = range ? range.index : 0;\n            this.quill.pasteHTML(position, rendered, 'silent');\n            this.quill.setSelection(position + rendered.length);\n          })\n          .catch(error => console.error(error));\n      });\n\n    } else {\n      //console.log('when to use this') 보통 다른 곳에서  paste 한다음에  copy하면 이쪽 걸로 한다. \n      super.onPaste(e);\n    }\n  }\n\n}\nQuill.register('modules/clipboard', Clipboard, true);\n\nconst BlockEmbed = Quill.import('blots/block/embed');\n\nclass ImageBlot extends BlockEmbed {\n\n  static create(value) {\n    const imgTag = super.create();\n    imgTag.setAttribute('src', value.src);\n    imgTag.setAttribute('alt', value.alt);\n    imgTag.setAttribute('width', '100%');\n    return imgTag;\n  }\n\n  static value(node) {\n    return { src: node.getAttribute('src'), alt: node.getAttribute('alt') };\n  }\n\n}\n\nImageBlot.blotName = 'image';\nImageBlot.tagName = 'img';\nQuill.register(ImageBlot);\n\nclass VideoBlot extends BlockEmbed {\n\n  static create(value) {\n    if (value && value.src) {\n      const videoTag = super.create();\n      videoTag.setAttribute('src', value.src);\n      videoTag.setAttribute('title', value.title);\n      videoTag.setAttribute('width', '100%');\n      videoTag.setAttribute('controls', '');\n\n      return videoTag;\n    } else {\n      const iframeTag = document.createElement('iframe');\n      iframeTag.setAttribute('src', value);\n      iframeTag.setAttribute('frameborder', '0');\n      iframeTag.setAttribute('allowfullscreen', true);\n      iframeTag.setAttribute('width', '100%');\n      return iframeTag;\n    }\n  }\n\n  static value(node) {\n    if (node.getAttribute('title')) {\n      return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n    } else {\n      return node.getAttribute('src');\n    }\n    // return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n  }\n\n}\n\nVideoBlot.blotName = 'video';\nVideoBlot.tagName = 'video';\nQuill.register(VideoBlot);\n\nclass FileBlot extends BlockEmbed {\n\n  static create(value) {\n    const prefixTag = document.createElement('span');\n    prefixTag.innerText = \"Attachments - \"; //Prior text: 첨부파일\n\n    const bTag = document.createElement('b');\n    //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\n    bTag.innerText = value;\n\n    const linkTag = document.createElement('a');\n    linkTag.setAttribute('href', FILE_UPLOAD_LOCATION_GET + '/' + value);\n    linkTag.setAttribute(\"target\", \"_blank\");\n    linkTag.setAttribute(\"className\", \"file-link-inner-post\");\n    linkTag.appendChild(bTag);\n    //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\n\n    const node = super.create();\n    node.appendChild(prefixTag);\n    node.appendChild(linkTag);\n\n    return node;\n  }\n\n  static value(node) {\n    const linkTag = node.querySelector('a');\n    return linkTag.getAttribute('href');\n  }\n\n}\n\nFileBlot.blotName = 'file';\nFileBlot.tagName = 'p';\nFileBlot.className = 'file-inner-post';\nQuill.register(FileBlot);\n\nclass PollBlot extends BlockEmbed {\n\n  static create(value) {\n    const prefixTag = document.createElement('span');\n    prefixTag.innerText = \"투표 - \";\n\n    const bTag = document.createElement('b');\n    bTag.innerText = value.title;\n\n    const node = super.create();\n    node.setAttribute('id', value.id);\n    node.appendChild(prefixTag);\n    node.appendChild(bTag);\n\n    return node;\n  }\n\n  static value(node) {\n    const id = node.getAttribute('id');\n    const bTag = node.querySelector('b');\n    const title = bTag.innerText;\n    return { id, title };\n  }\n\n}\n\nPollBlot.blotName = 'poll';\nPollBlot.tagName = 'p';\nPollBlot.className = 'poll-inner-post';\nQuill.register(PollBlot);\n\nclass QuillEditor extends React.Component {\n\n  fetchid;\n  initialiser;\n  bandId;\n  placeholder;\n  onEditorChange;\n  onFilesChange;\n  onPollsChange;\n  _isMounted;\n\n  constructor(props) {\n    super(props);\n\n    console.log(props);\n\n    this.state = {\n      editorHtml: __ISMSIE__ ? \"<p>&nbsp;</p>\" : \"\",\n      files: [],\n    };\n\n    this.reactQuillRef = null;\n\n    this.inputOpenImageRef = React.createRef();\n    this.inputOpenVideoRef = React.createRef();\n    this.inputOpenFileRef = React.createRef();\n  }\n\n\n\n  componentDidMount() {\n\n    this._isMounted = true;\n\n    if (this.props.fetchid) {\n\n      const getStuff = (id) => {\n        axios.get(process.env.REACT_APP_BACKEND_URL + `posts/${id}`)\n          .then(response => {\n\n            if (response.status == 200) {\n              this.setState({\n                //editorHtml: this.props.initialiser\n                editorHtml: response.data.post.text\n              })\n\n            } else {\n              alert('Couldn`t get blog');\n            }\n          })\n      }\n\n      getStuff(this.props.fetchid);\n\n\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n\n  handleChange = (html) => {\n    console.log('html', html)\n    // https://youtu.be/BbR-QCoKngE\n    // https://www.youtube.com/embed/ZwKhufmMxko\n    // https://tv.naver.com/v/9176888\n    // renderToStaticMarkup(ReactHtmlParser(html, options));\n\n    this.setState({\n      editorHtml: html\n    }, () => {\n      this.props.onEditorChange(this.state.editorHtml);\n    });\n  };\n\n  // I V F P들을  눌렀을떄 insertImage: this.imageHandler로 가서  거기서 inputOpenImageRef를 클릭 시킨다. \n  imageHandler = () => {\n    this.inputOpenImageRef.current.click();\n  };\n\n  videoHandler = () => {\n    this.inputOpenVideoRef.current.click();\n  };\n\n  fileHandler = () => {\n    this.inputOpenFileRef.current.click();\n  };\n\n\n  insertImage = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n      const file = e.currentTarget.files[0];\n\n      let formData = new FormData();\n      const config = {\n        header: { 'content-type': 'multipart/form-data' }\n      }\n      formData.append(\"file\", file);\n\n      axios.post(FILE_UPLOAD_LOCATION, formData, config)\n        .then(response => {\n          if (response.data.success) {\n\n            const quill = this.reactQuillRef.getEditor();\n            quill.focus();\n\n            let range = quill.getSelection();\n            let position = range ? range.index : 0;\n\n            //먼저 노드 서버에다가 이미지를 넣은 다음에   여기 아래에 src에다가 그걸 넣으면 그게 \n            //이미지 블롯으로 가서  크리에이트가 이미지를 형성 하며 그걸 발류에서     src 랑 alt 를 가져간후에  editorHTML에 다가 넣는다.\n\n            console.log(\"The response data url\", response.data.url);\n\n            quill.insertEmbed(position, \"image\", { src: process.env.REACT_APP_BACKEND_URL + response.data.url, alt: response.data.fileName });\n            quill.setSelection(position + 1);\n\n            if (this._isMounted) {\n              this.setState({\n                files: [...this.state.files, file]\n              }, () => { this.props.onFilesChange(this.state.files) });\n            }\n          } else {\n            return alert('failed to upload image file')\n          }\n        })\n    }\n  };\n\n  insertVideo = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n      const file = e.currentTarget.files[0];\n\n      let formData = new FormData();\n      const config = {\n        header: { 'content-type': 'multipart/form-data' }\n      }\n      formData.append(\"file\", file);\n\n      axios.post(FILE_UPLOAD_LOCATION, formData, config)\n        .then(response => {\n          if (response.data.success) {\n\n            const quill = this.reactQuillRef.getEditor();\n            quill.focus();\n\n            let range = quill.getSelection();\n            let position = range ? range.index : 0;\n            quill.insertEmbed(position, \"video\", { src: process.env.REACT_APP_BACKEND_URL + response.data.url, title: response.data.fileName });\n            quill.setSelection(position + 1);\n\n            if (this._isMounted) {\n              this.setState({\n                files: [...this.state.files, file]\n              }, () => { this.props.onFilesChange(this.state.files) });\n            }\n          } else {\n            return alert('failed to upload file')\n          }\n        })\n    }\n  }\n\n  insertFile = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n      const file = e.currentTarget.files[0];\n      console.log(file);\n\n      let formData = new FormData();\n      const config = {\n        header: { 'content-type': 'multipart/form-data' }\n      }\n      formData.append(\"file\", file);\n\n      axios.post(FILE_UPLOAD_LOCATION, formData, config)\n        .then(response => {\n          if (response.data.success) {\n\n            const quill = this.reactQuillRef.getEditor();\n            quill.focus();\n\n            let range = quill.getSelection();\n            let position = range ? range.index : 0;\n            quill.insertEmbed(position, \"file\", response.data.fileName);\n            quill.setSelection(position + 1);\n\n            if (this._isMounted) {\n              this.setState({\n                files: [...this.state.files, file]\n              }, () => { this.props.onFilesChange(this.state.files) });\n            }\n          };\n        })\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div id=\"toolbar\">\n          <select className=\"ql-header\" defaultValue={\"\"} onChange={e => e.persist()}>\n            <option value=\"1\" />\n            <option value=\"2c\" />\n            <option value=\"\" />\n          </select>\n          <button className=\"ql-bold\" />\n          <button className=\"ql-italic\" />\n          <button className=\"ql-underline\" />\n          <button className=\"ql-strike\" />\n          <button className=\"ql-insertImage\">\n            I\n                    </button>\n          <button className=\"ql-insertVideo\">\n            V\n                    </button>\n          <button className=\"ql-insertFile\">\n            F\n                    </button>\n          <button className=\"ql-link\" />\n          <button className=\"ql-code-block\" />\n          <button className=\"ql-video\" />\n          <button className=\"ql-blockquote\" />\n          <button className=\"ql-clean\" />\n\n\n\n        </div>\n        <ReactQuill\n          ref={(el) => { this.reactQuillRef = el }}\n          theme={'snow'}\n          onChange={this.handleChange}\n          modules={this.modules}\n          formats={this.formats}\n          value={this.state.editorHtml}\n          placeholder={this.props.placeholder}\n          initialiser={this.props.initialiser}\n          fetchid={this.props.fetchid}\n        />\n        <input type=\"file\" accept=\"image/*\" ref={this.inputOpenImageRef} style={{ display: \"none\" }} onChange={this.insertImage} />\n        <input type=\"file\" accept=\"video/*\" ref={this.inputOpenVideoRef} style={{ display: \"none\" }} onChange={this.insertVideo} />\n        <input type=\"file\" accept=\"*\" ref={this.inputOpenFileRef} style={{ display: \"none\" }} onChange={this.insertFile} />\n      </div>\n    )\n  }\n\n  modules = {\n    syntax: false,//true requires highlight.js but idk how to include it LMAO i dont know how webdev works bruh i just copy code\n    toolbar: {\n      container: \"#toolbar\",\n      //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다. \n      handlers: {\n        insertImage: this.imageHandler,\n        insertVideo: this.videoHandler,\n        insertFile: this.fileHandler,\n        insertPoll: this.pollHandler,\n      }\n    },\n\n  };\n\n  formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike',\n    'image', 'video', 'file', 'link', \"code-block\", \"video\", \"blockquote\", \"clean\"\n  ];\n}\n\nexport default QuillEditor;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport Button from \"@material-ui/core/Button\";\nimport QuillEditor from \"../components/editor/QuillEditor\";\nimport AlertDialog from \"./Dialog\";\nimport axios from \"axios\";\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst FILE_UPLOAD_LOCATION = BACKEND_URL+'uploadfiles';\n\nexport const EditPostForm = ({preloadedValues}) => {\n\n  const [text, setText] = useState(\"\");\n  const [title, setTitle] = useState(preloadedValues.posttitle);\n  const [coverImage, setCoverImage] = useState(null);\n  const [published, setPublished] = useState(preloadedValues.published);\n\n  let { id } = useParams();\n\n  const { register } = useForm({\n    defaultValues: preloadedValues\n  });\n\n  let history = useHistory();\n\n  const onSubmit = (event) => {\n    event.preventDefault(); //This prevents default behaviour of pressing submit: The page refreshing without saving!\n\n    const sendDataToServer = (coverImage)=>{\n      const currentDisplayName = localStorage.getItem(\"currentDisplayName\");\n      const token = localStorage.getItem(\"token\");\n      const bearer = `Bearer ${token}`;\n      \n      const realFormData = coverImage ? JSON.stringify({\n        title,\n        text,\n        author_name:currentDisplayName, //IN future patches change to userinfo.displayname\n        published,\n        cover_image_url: coverImage\n      }) : JSON.stringify({\n        title,\n        text,\n        author_name:currentDisplayName, //IN future patches change to userinfo.displayname\n        published\n      });\n\n      try {\n        const req = fetch(\n          BACKEND_URL+`posts/${id}`,\n          {\n            method: \"PUT\",\n            body: realFormData,\n            headers: {\n              Authorization: bearer,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        ).then((res) => {\n\n          if(res.status == 200){\n            setText(\"\");//reset values\n            setTitle(\"\");\n\n            history.push(\"/posts\"); //Redirect back to post listing\n          \n          } else{\n            \n            alert(\"Failed to upload, please try again!\");\n          }\n\n        }).catch((err) => {\n          console.log(err.json());\n        })      \n      } catch (err) {console.log(err);}\n    }\n\n    //Only if user wants to upload a cover image then we do the upload.\n    if(coverImage){\n\n      //Prepare the cover image for upload.\n\n      let imageFormData = new FormData();\n      imageFormData.append(\"file\", coverImage);\n\n      const config = {\n        header: { 'content-type': 'multipart/form-data' }\n      }\n\n      //Try to post the cover image and get back the URL as a response.\n      axios.post(FILE_UPLOAD_LOCATION, imageFormData, config)\n        .then(res => {\n          if(res.data.success) { //URL is stored in res.data.url\n            sendDataToServer(res.data.url);\n          }else{ //file didn't upload\n            sendDataToServer('uploads/default.webp');\n          }\n      }).catch(err => {\n        sendDataToServer('uploads/default.webp');\n      });\n\n    }else{\n      sendDataToServer(false);\n    }\n  };\n\n  const handleTitleChange = (e) => {\n    console.log(e.target.value);\n    setTitle(e.target.value);\n  }\n\n  const onEditorChange = (value) =>{\n    setText(value);\n  }\n\n  const onFilesChange = (value) => {\n    //console.log(value);\n  }\n\n  const onCheckboxChange = (e) => {\n    console.log(e.currentTarget.checked);\n    setPublished(e.currentTarget.checked);\n  }\n\n  const coverImageChange = (e) => {\n    console.log(e.currentTarget.files[0]);\n    setCoverImage(e.currentTarget.files[0]);\n  }\n\n  return (\n    <div className=\"layout\">\n\n    <form>\n        <div>\n          <label>My Title</label><br />\n          {/* value={title} onChange = {(e)=>setTitle(e.target.value)}  */}\n          <input ref={register} placeholder=\"My Title\" name=\"posttitle\" onChange={handleTitleChange}fontSize='2em' type='text'/> <br /><br />\n        </div>\n\n        <div>\n          <label>Publish to the web</label>\n          <input ref={register} checked={published} name=\"published\" className='mycheckbox' type='checkbox'\n\t\t\t\tonChange={onCheckboxChange} />\n        </div>\n\n        <div>\n          Choose a new cover image: <input type=\"file\" onChange={coverImageChange}></input>\n        </div><br />\n\n        <QuillEditor\n                \n          placeholder={\"Start Posting Something\"}\n          modules={{\n            toolbar:[['bold', 'italic'], ['link', 'image']]\n          }}\n          onEditorChange={onEditorChange}\n          onFilesChange={onFilesChange}\n          fetchid={id}\n          \n        />\n\n        <div style={{ textAlign: 'center', margin: '2rem', }}>\n          <Button onClick={onSubmit} color=\"primary\">Save Post</Button>\n        </div>\n\n        <div style={{ textAlign: 'center', margin: '2rem', }}>\n          <AlertDialog deleteid={id}/>\n        </div>\n\n      </form>\n    </div>\n  );\n};\n\n","import React, {useEffect, useState} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { EditPostForm } from \"../components/EditPostForm\";\nimport axios from \"axios\";\n\nfunction EditPost() {\n  const [data, setData] = useState(null)\n\n  let { id } = useParams();\n \n  useEffect(() => {  \n\n    axios.get(process.env.REACT_APP_BACKEND_URL+`posts/${id}`)\n      .then(response => {\n        if(response.status == 200){\n          setData({\n            posttitle:response.data.post.title,\n            published:response.data.post.published\n          });          \n        }else{\n          alert('Couldn`t get post data');\n        }\n    })\n    \n\n  }, [])\n\n  return data ? <EditPostForm preloadedValues={data} /> : <div>Loading...</div>\n  //return <div>Yes</div>\n\n}\n\nexport default EditPost;","import { useState, useEffect, React } from \"react\";\nimport { useHistory, withRouter } from \"react-router-dom\";\nimport QuillEditor from \"../components/editor/QuillEditor\";\nimport axios from \"axios\";\n\nconst FILE_UPLOAD_LOCATION = process.env.REACT_APP_BACKEND_URL+'uploadfiles';\n\nconst NewPost = () => {\n  const [text, setText] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [coverImage, setCoverImage] = useState(null);\n  const [published, setPublished] = useState(false);\n\n  let history = useHistory();\n\n  useEffect(()=>{\n     console.log(published)\n  })\n\n  const onSubmit = (event) => {\n\n    event.preventDefault(); //This prevents default behaviour of pressing submit: The page refreshing without saving!\n    \n    //Method to POST data to the server.\n    const sendDataToServer = async (coverImage) => {\n      \n      const currentDisplayName = localStorage.getItem(\"currentDisplayName\");\n      const token = localStorage.getItem(\"token\");\n      const bearer = `Bearer ${token}`;\n\n      const realFormData = JSON.stringify({\n        title,\n        text,\n        author_name:currentDisplayName, //IN future patches change to userinfo.displayname\n        published,\n        cover_image_url: coverImage ? coverImage : '' //URL for the cover Image\n      });\n\n      try {        \n        const req = await fetch(      \n\n          process.env.REACT_APP_BACKEND_URL+'posts/',\n          {\n            method: \"post\",\n            body: realFormData,\n            headers: {\n              Authorization: bearer,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        ).then((res) => {\n          console.log(res);\n\n          if(res.status === 200){\n            setText(\"\");//reset values\n            setTitle(\"\");\n            history.push(\"/posts\"); //Redirect back to post listing          \n          } else{\n            alert(\"Failed to upload, please try again!\");\n          }\n\n        }).catch((err) => {\n          console.log(err);\n        });      \n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    //Prepare the cover image for upload.\n    let imageFormData = new FormData();\n    imageFormData.append(\"file\", coverImage);\n\n    const config = {\n      header: { 'content-type': 'multipart/form-data' }\n    }\n\n    //Try to post the cover image and get back the URL as a response.\n    axios.post(FILE_UPLOAD_LOCATION, imageFormData, config)\n      .then(res => {\n        if(res.data.success) { //URL is stored in res.data.url\n          sendDataToServer(res.data.url);\n        }else{ //file didn't upload\n          sendDataToServer('uploads/default.webp');\n        }\n    }).catch(err => {\n      console.log(err);\n      sendDataToServer('uploads/default.webp');\n    });\n\n  }\n\n  const onEditorChange = (value) =>{\n    setText(value);\n  }\n\n  const onFilesChange = (value) => {\n    //console.log(value);\n  }\n\n  const onCheckboxChange = (e) => {\n    setPublished(e.currentTarget.checked);\n    //console.log(published);\n  }\n\n  const coverImageChange = (e) => {\n    setCoverImage(e.currentTarget.files[0]);\n  }\n\n\n\n  return (\n    <div>\n\n      <form onSubmit={onSubmit}>\n        <div>\n          <label>My Title</label><br />\n          <input fontSize='2em' type='text' placeholder='Title' value={title} onChange = {(e)=>setTitle(e.target.value)} /> <br /><br />\n        </div>\n\n        <div>\n          <label>Publish to the web</label>\n          <input className='mycheckbox' type='checkbox'\n\t\t\t\tonChange={onCheckboxChange} />\n        </div>\n\n        <div>\n          <label>Add in a cover image (Recommended size: X by Y)</label>\n          <input type=\"file\" onChange={coverImageChange}></input>\n        </div>\n\n        <QuillEditor\n          placeholder={\"Start Posting Something\"}\n          modules={{\n            toolbar:[['bold', 'italic'], ['link', 'image']]\n          }}\n          onEditorChange={onEditorChange}\n          onFilesChange={onFilesChange}\n        />\n\n        <div style={{ textAlign: 'center', margin: '2rem', }}>\n          <button\n            size=\"large\"\n            htmltype=\"submit\"\n            className=\"\"\n          >\n            Submit\n                </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(NewPost);\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst theNav = ({ userAuth, setUserAuth }) => {\n  const logout = () => {\n    setUserAuth(false);\n    localStorage.clear();\n  };\n\n  return (\n    <Navbar>\n      <Navbar.Brand>\n        {\" \"}\n        <h1>My Blog</h1>\n      </Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <LinkContainer to=\"/posts\">\n          <Nav.Link>Home</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to=\"/newpost\">\n          <Nav.Link>New Post</Nav.Link>\n        </LinkContainer>\n      </Nav>\n      {userAuth && (\n        <Button variant=\"outline-success\" onClick={logout}>\n          Logout\n        </Button>\n      )}\n    </Navbar>\n  );\n};\n\nexport default theNav;\n","import { Route, HashRouter, Switch, Redirect } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport Home from \"./pages/Home.jsx\";\nimport { useEffect, useState } from \"react\";\nimport PostPage from \"./pages/EditPost\";\nimport NewPost from \"./pages/NewPost\";\nimport Nav from \"./components/Nav\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction Routes() {\n  const [userAuth, setUserAuth] = useState(false);\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"userAuth\");\n    if (user) {\n      setUserAuth(true);\n    } else {\n      setUserAuth(false);\n    }\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            {\" \"}\n            <Nav\n              userAuth={userAuth}\n              setUserAuth={setUserAuth}\n              className=\"Nav\"\n            />\n            <Switch>\n              {\" \"}\n              <Route exact path=\"/\">\n                <Redirect to=\"/posts\" />\n              </Route>\n              <Route exact path=\"/posts\">\n                {!userAuth ? <LoginPage setUserAuth={setUserAuth} /> : <Home />}\n              </Route>\n              <Route exact path=\"/posts/:id\">\n                {!userAuth ? (\n                  <LoginPage setUserAuth={setUserAuth} />\n                ) : (\n                  <PostPage />\n                )}\n              </Route>\n              <Route path=\"/newpost\">\n                {!userAuth ? (\n                  <LoginPage setUserAuth={setUserAuth} />\n                ) : (\n                  <NewPost />\n                )}\n              </Route>\n              <Route path=\"/\">\n                <p>404</p>\n              </Route>\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Routes;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport \"./index.css\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <HashRouter>\n    <Routes />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}